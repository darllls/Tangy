@page "/learnBlazor/learnRouting/{parameter1:int}/{parameter2}"
@page "/learnBlazor/learnRouting/{parameter1}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting"

@inject NavigationManager _NavigationManager

<h3>Learn Routing</h3>
<p>@Parameter1</p>
<p>@Parameter2</p>

@* <NavLink href="learnRouting?Param1=Tangy&Param2=Blazor" class="btn btn-primary">Navigate with parameter</NavLink> *@
<button @onclick="NavigateToQueryParam" class="btn btn-primary">Navigate with parameter</button>
<button class="btn btn-success" @onclick="LoadParameters">Load with parameters</button>

<br/>
<h3>Query Parameters:</h3>
<p>@Param1</p>
<p>@Param2</p>

@code {
    [Parameter]
    public int Parameter1 { get; set; }

    [Parameter]
    public string Parameter2 { get; set; }

    [Parameter]
    public string Param1 { get; set; }

    [Parameter]
    public string Param2 { get; set; }

    private void LoadParameters()
    {
        var absoluteUri = new Uri(_NavigationManager.Uri);
        var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
        Param1 = queryParam["Param1"];
        Param2 = queryParam["Param2"];
    }

    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("learnRouting?Param1=Tangy&Param2=Blazor");
    }
}
