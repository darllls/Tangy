@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime


<h3>BlazorJS</h3>
<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />
<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation succeed</p>
    }
    else
    {
        <p>Confirmation failed</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Success");
    }

    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrSuccess("Operation Success");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "error");

    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "success");

    }
}
